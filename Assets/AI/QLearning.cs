// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System

public enum Strategy {
	Attack,
	RunAway,
	GetAmmo,
	DigDown
}


// class used in QLearning
public class QLearning {
	
	Dictionary <Dictionary <State,float>, Strategy> beliefs;
	float epsilon;
	float gamma;
	
	public QLearning () {
		
	}

	// sets all beliefs to 0
	public void initializeQValuesToZero () {

		Strategy[] strategyArray = new Strategy[] {
			Strategy.Attack,
			Strategy.RunAway,
			Strategy.GetAmmo,
			Strategy.DigDown
		};

		// iterate through every strategy and state
		foreach (Strategy strategy in strategyArray) {
			foreach (State state in State.allPossible()) {

			}
		}
	}
	
	// returns the QValue of a state, action tuple
	float getQValue (State state, Strategy action) {

	}

	// returns the max qValue at a state
	Strategy computeValueFromQValues (State state) {
		
	}

	// returns the optimal action at a state
	public Strategy computeStrategyFromQValues (State state) {
	
	}

	// updates the qValue of a state, action tuple
	public void update (State state, Strategy action, State nextState, float reward) {

	}

	// saves the belief data to the disk
	public void saveData (string fileName) {

	}

	float reward (state,)
}


